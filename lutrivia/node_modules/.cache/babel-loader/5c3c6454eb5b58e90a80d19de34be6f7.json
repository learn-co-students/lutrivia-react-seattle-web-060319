{"ast":null,"code":"import _objectSpread from \"/Users/Karen/dev/module-4-react/lutrivia-react-seattle-web-060319/lutrivia/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Karen/dev/module-4-react/lutrivia-react-seattle-web-060319/lutrivia/src/App.js\";\nimport React from 'react';\nimport data from './data.js';\nimport QuestionList from './containers/QuestionList';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleStart = () => {\n      let selectedQs = [];\n      let num;\n\n      let allQs = _objectSpread({}, this.state.allQuestions);\n\n      for (let i = 0; i < 5; i++) {\n        num = Math.floor(Math.random() * allQs.length);\n        selectedQs.push(allQs.splice([num], 1)[0]);\n      }\n\n      this.setState({\n        allQuestions: data.questions,\n        questions: selectedQs\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let score = 0;\n\n      for (let i = 0; i < this.state.questions.length; i++) {\n        const q = this.state.questions[i];\n\n        if (String(q.answer) == e.target.elements[\"question\".concat(i)].value) {\n          console.log(q.answer);\n          score++;\n        }\n      }\n\n      console.log(score);\n      return score;\n    };\n\n    this.state = {\n      allQuestions: data.questions,\n      questions: [],\n      name: ''\n    };\n  }\n\n  componentDidMount() {\n    this.handleStart();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"New Game!\"), React.createElement(QuestionList, {\n      questions: this.state.questions,\n      handleSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Karen/dev/module-4-react/lutrivia-react-seattle-web-060319/lutrivia/src/App.js"],"names":["React","data","QuestionList","App","Component","constructor","handleStart","selectedQs","num","allQs","state","allQuestions","i","Math","floor","random","length","push","splice","setState","questions","handleSubmit","e","preventDefault","score","q","String","answer","target","elements","value","console","log","name","componentDidMount","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;AAGA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAadC,WAbc,GAaA,MAAM;AAClB,UAAIC,UAAU,GAAG,EAAjB;AACA,UAAIC,GAAJ;;AACA,UAAIC,KAAK,qBAAQ,KAAKC,KAAL,CAAWC,YAAnB,CAAT;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BJ,QAAAA,GAAG,GAAGK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,KAAK,CAACO,MAAjC,CAAN;AACAT,QAAAA,UAAU,CAACU,IAAX,CAAgBR,KAAK,CAACS,MAAN,CAAa,CAACV,GAAD,CAAb,EAAoB,CAApB,EAAuB,CAAvB,CAAhB;AACD;;AACD,WAAKW,QAAL,CAAc;AAAER,QAAAA,YAAY,EAAEV,IAAI,CAACmB,SAArB;AAAgCA,QAAAA,SAAS,EAAEb;AAA3C,OAAd;AACD,KAtBa;;AAAA,SAwBdc,YAxBc,GAwBEC,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKF,KAAL,CAAWU,SAAX,CAAqBJ,MAAzC,EAAiDJ,CAAC,EAAlD,EAAsD;AACpD,cAAMa,CAAC,GAAG,KAAKf,KAAL,CAAWU,SAAX,CAAqBR,CAArB,CAAV;;AACA,YAAIc,MAAM,CAACD,CAAC,CAACE,MAAH,CAAN,IAAoBL,CAAC,CAACM,MAAF,CAASC,QAAT,mBAA6BjB,CAA7B,GAAkCkB,KAA1D,EAAiE;AAC/DC,UAAAA,OAAO,CAACC,GAAR,CAAYP,CAAC,CAACE,MAAd;AACAH,UAAAA,KAAK;AACN;AACF;;AACDO,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,aAAOA,KAAP;AACD,KApCa;;AAEZ,SAAKd,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAEV,IAAI,CAACmB,SADR;AAEXA,MAAAA,SAAS,EAAE,EAFA;AAGXa,MAAAA,IAAI,EAAE;AAHK,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAK5B,WAAL;AACD;;AA2BD6B,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAK7B,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAE,KAAKI,KAAL,CAAWU,SAApC;AAA+C,MAAA,YAAY,EAAE,KAAKC,YAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA9C+B;;AAiDlC,eAAelB,GAAf","sourcesContent":["import React from 'react';\nimport data from './data.js'\nimport QuestionList from './containers/QuestionList'\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      allQuestions: data.questions,\n      questions: [],\n      name: ''\n    }\n  }\n\n  componentDidMount() {\n    this.handleStart()\n  }\n\n  handleStart = () => {\n    let selectedQs = []\n    let num\n    let allQs = { ...this.state.allQuestions }\n    for (let i = 0; i < 5; i++) {\n      num = Math.floor(Math.random() * allQs.length)\n      selectedQs.push(allQs.splice([num], 1)[0])\n    }\n    this.setState({ allQuestions: data.questions, questions: selectedQs })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    let score = 0\n    for (let i = 0; i < this.state.questions.length; i++) {\n      const q = this.state.questions[i];\n      if (String(q.answer) == e.target.elements[`question${i}`].value) {\n        console.log(q.answer)\n        score++\n      }\n    }\n    console.log(score)\n    return score\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.handleStart}>New Game!</button>\n        <QuestionList questions={this.state.questions} handleSubmit={this.handleSubmit} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}