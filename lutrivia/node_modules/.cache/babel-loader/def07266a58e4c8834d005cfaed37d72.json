{"ast":null,"code":"var _jsxFileName = \"/Users/hao/mod4/lutrivia-react-seattle-web-060319/lutrivia/src/App.js\";\nimport React from 'react';\nimport data from './data';\nimport GameContainer from './GameContainer';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleClick = (question, e) => {\n      if (!question.answered) {\n        if (e.target.name === question.answer.toString()) {\n          e.target.className = 'correct';\n          this.setState({\n            score: this.state.score + 1\n          });\n          question.answered = true;\n        } else {\n          e.target.className = \"wrong\";\n          question.answered = true;\n        }\n      }\n    };\n\n    this.handleNewClick = () => {\n      this.setState({\n        index: this.state.index + 5\n      });\n    };\n\n    this.renderQuestions = () => {\n      return this.state.questions.slice(this.state.index, this.state.index + 5);\n    };\n\n    this.state = {\n      score: 0,\n      questions: data.questions,\n      index: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Lutrivia\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Score: \", this.state.score), React.createElement(\"button\", {\n      onClick: this.handleNewClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"New Game\"), React.createElement(GameContainer, {\n      questions: this.renderQuestions(),\n      handleClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/hao/mod4/lutrivia-react-seattle-web-060319/lutrivia/src/App.js"],"names":["React","data","GameContainer","App","Component","constructor","handleClick","question","e","answered","target","name","answer","toString","className","setState","score","state","handleNewClick","index","renderQuestions","questions","slice","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAI;AACb;;AADa,SASfC,WATe,GASD,CAACC,QAAD,EAAWC,CAAX,KAAiB;AAC7B,UAAG,CAACD,QAAQ,CAACE,QAAb,EAAuB;AACrB,YAAID,CAAC,CAACE,MAAF,CAASC,IAAT,KAAkBJ,QAAQ,CAACK,MAAT,CAAgBC,QAAhB,EAAtB,EAAkD;AAChDL,UAAAA,CAAC,CAACE,MAAF,CAASI,SAAT,GAAqB,SAArB;AACA,eAAKC,QAAL,CAAc;AACZC,YAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,GAAmB;AADd,WAAd;AAGAT,UAAAA,QAAQ,CAACE,QAAT,GAAoB,IAApB;AACD,SAND,MAMO;AACLD,UAAAA,CAAC,CAACE,MAAF,CAASI,SAAT,GAAqB,OAArB;AACAP,UAAAA,QAAQ,CAACE,QAAT,GAAoB,IAApB;AACD;AACF;AACF,KAtBc;;AAAA,SAwBfS,cAxBe,GAwBE,MAAM;AACrB,WAAKH,QAAL,CAAc;AACZI,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAX,GAAmB;AADd,OAAd;AAGD,KA5Bc;;AAAA,SA8BfC,eA9Be,GA8BG,MAAM;AACtB,aAAO,KAAKH,KAAL,CAAWI,SAAX,CAAqBC,KAArB,CAA2B,KAAKL,KAAL,CAAWE,KAAtC,EAA6C,KAAKF,KAAL,CAAWE,KAAX,GAAmB,CAAhE,CAAP;AACD,KAhCc;;AAEb,SAAKF,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE,CADI;AAEXK,MAAAA,SAAS,EAAEpB,IAAI,CAACoB,SAFL;AAGXF,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AA2BDI,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,KAAKN,KAAL,CAAWD,KAAtB,CAFF,EAGE;AAAQ,MAAA,OAAO,EAAE,KAAKE,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIE,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAE,KAAKE,eAAL,EAA1B;AAAkD,MAAA,WAAW,EAAE,KAAKd,WAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CALF,CADF;AAYD;;AAhD+B;;AAmDlC,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport data from './data';\nimport GameContainer from './GameContainer'\n\nclass App extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      score: 0,\n      questions: data.questions,\n      index: 0\n    }\n  }\n\n  handleClick = (question, e) => {\n    if(!question.answered) {\n      if (e.target.name === question.answer.toString()) {\n        e.target.className = 'correct'\n        this.setState({\n          score: this.state.score + 1\n        })\n        question.answered = true;\n      } else {\n        e.target.className = \"wrong\";\n        question.answered = true;\n      }\n    }\n  }\n\n  handleNewClick = () => {\n    this.setState({\n      index: this.state.index + 5\n    })\n  }\n\n  renderQuestions = () => {\n    return this.state.questions.slice(this.state.index, this.state.index + 5)\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Lutrivia</h1>\n        <p>Score: {this.state.score}</p>\n        <button onClick={this.handleNewClick}>New Game</button>\n        <GameContainer questions={this.renderQuestions()} handleClick={this.handleClick}/>\n        <form>\n          <input type=\"text\" placeholder='name'/>\n          <input type=\"submit\" value=\"Submit score\"/>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}