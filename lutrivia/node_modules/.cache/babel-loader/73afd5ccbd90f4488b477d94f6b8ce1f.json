{"ast":null,"code":"var _jsxFileName = \"/Users/hao/mod4/lutrivia-react-seattle-web-060319/lutrivia/src/App.js\";\nimport React from 'react';\nimport data from './data';\nimport GameContainer from './GameContainer';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleClick = (question, e) => {\n      console.log(question.answered);\n\n      if (!question.answered) {\n        if (e.target.name === question.answer.toString()) {\n          e.target.className = 'correct';\n          this.setState({\n            score: this.state.score + 1\n          });\n          question.answered = true;\n        } else {\n          e.target.className = \"wrong\";\n          question.answered = true;\n        }\n      }\n\n      console.log(question);\n    };\n\n    this.state = {\n      score: 0,\n      questions: data.questions\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Lutrivia\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Score: \", this.state.score), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"New Game\"), React.createElement(GameContainer, {\n      questions: this.state.questions,\n      handleClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/hao/mod4/lutrivia-react-seattle-web-060319/lutrivia/src/App.js"],"names":["React","data","GameContainer","App","Component","constructor","handleClick","question","e","console","log","answered","target","name","answer","toString","className","setState","score","state","questions","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAI;AACb;;AADa,SAQfC,WARe,GAQD,CAACC,QAAD,EAAWC,CAAX,KAAiB;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,QAArB;;AACA,UAAG,CAACJ,QAAQ,CAACI,QAAb,EAAuB;AACrB,YAAIH,CAAC,CAACI,MAAF,CAASC,IAAT,KAAkBN,QAAQ,CAACO,MAAT,CAAgBC,QAAhB,EAAtB,EAAkD;AAChDP,UAAAA,CAAC,CAACI,MAAF,CAASI,SAAT,GAAqB,SAArB;AACA,eAAKC,QAAL,CAAc;AACZC,YAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,GAAmB;AADd,WAAd;AAGAX,UAAAA,QAAQ,CAACI,QAAT,GAAoB,IAApB;AACD,SAND,MAMO;AACLH,UAAAA,CAAC,CAACI,MAAF,CAASI,SAAT,GAAqB,OAArB;AACAT,UAAAA,QAAQ,CAACI,QAAT,GAAoB,IAApB;AACD;AACF;;AACHF,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACC,KAvBc;;AAEb,SAAKY,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE,CADI;AAEXE,MAAAA,SAAS,EAAEnB,IAAI,CAACmB;AAFL,KAAb;AAID;;AAmBDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,KAAKF,KAAL,CAAWD,KAAtB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIE,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,SAArC;AAAgD,MAAA,WAAW,EAAE,KAAKd,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AAnC+B;;AAsClC,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport data from './data';\nimport GameContainer from './GameContainer'\n\nclass App extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      score: 0,\n      questions: data.questions\n    }\n  }\n\n  handleClick = (question, e) => {\n    console.log(question.answered)\n    if(!question.answered) {\n      if (e.target.name === question.answer.toString()) {\n        e.target.className = 'correct'\n        this.setState({\n          score: this.state.score + 1\n        })\n        question.answered = true;\n      } else {\n        e.target.className = \"wrong\";\n        question.answered = true;\n      }\n    }\n  console.log(question);  \n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Lutrivia</h1>\n        <p>Score: {this.state.score}</p>\n        <button>New Game</button>\n        <GameContainer questions={this.state.questions} handleClick={this.handleClick}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}